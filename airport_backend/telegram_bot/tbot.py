import telebot
from telebot.types import (
    ReplyKeyboardMarkup, KeyboardButton,
    InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo
)
import requests
import logging
from datetime import datetime, timedelta
# import threading

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

API_TOKEN = '7702184372:AAFpYNtn0V1MJRYB7BwgYVkd1pBhdWvSXCU'
DJANGO_API_URL = 'https://lounge-booking.com/api/users/auth/'
WEBAPP_URL = 'https://lounge-booking.com/'

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –∫–Ω–æ–ø–æ–∫
buttons_store = {}

bot = telebot.TeleBot(API_TOKEN)


# # –§–æ–Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –∫–Ω–æ–ø–æ–∫
# def cleanup_old_buttons():
#     while True:
#         now = datetime.now()
#         to_update = []

#         for key, value in buttons_store.items():
#             if now - value['timestamp'] > timedelta(days=1):
#                 try:
#                     # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º "–û–±–Ω–æ–≤–∏—Ç–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ"
#                     bot.edit_message_text(
#                         chat_id=value['chat_id'],
#                         message_id=value['message_id'],
#                         text="‚è≥ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±–Ω–æ–≤–∏—Ç–µ –≤–∞—à–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ!",
#                         reply_markup=create_location_button()
#                     )
#                     to_update.append(key)
#                 except Exception as e:
#                     logger.error(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

#         # –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å–∏ –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
#         for key in to_update:
#             del buttons_store[key]

#         # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç
#         threading.Event().wait(600)


# def create_location_button():
#     """
#     –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ".
#     """
#     keyboard = ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
#     location_button = KeyboardButton(
#         text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ", request_location=True)
#     keyboard.add(location_button)
#     return keyboard


# # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–æ–Ω–æ–≤—É—é –∑–∞–¥–∞—á—É
# threading.Thread(target=cleanup_old_buttons, daemon=True).start()


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    logger.info("–ö–æ–º–∞–Ω–¥–∞ /start –ø–æ–ª—É—á–µ–Ω–∞ –æ—Ç %s", message.from_user.username)

    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    welcome_text = (
        "‚úàÔ∏è **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Every Lounge WebApp!**\n\n"
        "–ó–∞–±—Ä–æ–Ω–∏—Ä—É–π—Ç–µ –¥–æ—Å—Ç—É–ø –≤ –ª—É—á—à–∏–µ –∑–∞–ª—ã –æ–∂–∏–¥–∞–Ω–∏—è –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤ –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É. "
        "–ü—Ä–æ—Å—Ç–æ —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º, –∏ –º—ã –ø–æ–¥–±–µ—Ä–µ–º –¥–ª—è –≤–∞—Å –±–ª–∏–∂–∞–π—à–∏–π –¥–æ—Å—Ç—É–ø–Ω—ã–π –∑–∞–ª.\n\n"
        "–ù–∞–º –Ω—É–∂–Ω–∞ –≤–∞—à–∞ –ª–æ–∫–∞—Ü–∏—è –¥–ª—è –ø–æ–¥–±–æ—Ä–∞ –ª—É—á—à–∏—Ö –∑–∞–ª–æ–≤."
        "–ù–∞–∂–º–∏—Ç–µ **'–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é'**, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å!"
    )

    # –ö–Ω–æ–ø–∫–∞ "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é"
    # –ú–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å row_width –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∫–Ω–æ–ø–∫–∏ –≤—ã—Å—Ç—Ä–∞–∏–≤–∞–ª–∏—Å—å –≤ –æ–¥–Ω—É –∫–æ–ª–æ–Ω–∫—É
    keyboard = InlineKeyboardMarkup(row_width=1)
    start_button = InlineKeyboardButton(
        text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ—ë –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ", request_location=True)
    keyboard.add(start_button)

    bot.send_message(message.chat.id, welcome_text,
                     reply_markup=keyboard, parse_mode='Markdown')

    bot.send_message(
        message.chat.id, welcome_text, reply_markup=keyboard, parse_mode='Markdown')



# –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.message_handler(content_types=['location'])
def handle_location(message):
    if message.location is not None:
        logger.info("–ü–æ–ª—É—á–µ–Ω–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è %s",
                    message.from_user.username)

        latitude = message.location.latitude
        longitude = message.location.longitude
        telegram_id = message.from_user.id
        username = message.from_user.username
        first_name = message.from_user.first_name if message.from_user.first_name else None
        last_name = message.from_user.last_name if message.from_user.last_name else None

        data = {
            "telegram_id": telegram_id,
            "username": username,
            "first_name": first_name,
            "last_name": last_name,
            "location": {
                "latitude": latitude,
                "longitude": longitude
            },
        }

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ Django API
        response = requests.post(DJANGO_API_URL, json=data)
        logger.info("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –Ω–∞ Django: %s", data)

        if response.status_code == 200:
            # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ –∏–∑ Django API
            response_data = response.json()
            if 'token' in response_data:
                access_token = response_data['token']

                # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ WebApp —Å –ø–µ—Ä–µ–¥–∞—á–µ–π —Ç–æ–∫–µ–Ω–∞
                keyboard = InlineKeyboardMarkup()
                button = InlineKeyboardButton(
                    text="–ü–µ—Ä–µ–π—Ç–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µüòä",
                    web_app=WebAppInfo(f"{WEBAPP_URL}?token={access_token}")
                )
                keyboard.add(button)

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π
                sent_message = bot.send_message(
                    message.chat.id,
                    "–ü–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ:",
                    reply_markup=keyboard
                )

                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–Ω–æ–ø–∫–µ
                buttons_store[sent_message.message_id] = {
                    'chat_id': sent_message.chat.id,
                    'message_id': sent_message.message_id,
                    'timestamp': datetime.now()
                }
            else:
                bot.send_message(
                    message.chat.id, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
        else:
            bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö.")


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    bot.infinity_polling()
